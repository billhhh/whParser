package com.Parser;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.client.ClientProtocolException;
import org.htmlparser.Parser;
import org.htmlparser.filters.AndFilter;
import org.htmlparser.filters.HasAttributeFilter;
import org.htmlparser.filters.TagNameFilter;
import org.htmlparser.util.NodeList;
import org.htmlparser.util.ParserException;

public class parseProDetail {
	
	private String pageContent = null;
	private Map<String,String> detailListMap = null;
	private String price;
	
	public parseProDetail(String link) throws ClientProtocolException, IOException {
		readPage rp = new readPage(link);
		this.pageContent = rp.getPageContent();
		detailListMap = new HashMap<String, String>();
	}
	
	public String getPrice() throws ParserException{
		setPrice();
		return this.price;
	}
	
	public Map<String,String> getDetailListMap() throws ParserException{
		setDetailList();
		return this.detailListMap;
	}
	
	/*取得价格*/
	private void setPrice() throws ParserException{
		
		Parser p = new Parser(pageContent);
		
		/*各种过滤器*/
		AndFilter priceTag = new AndFilter(new TagNameFilter("span"),new HasAttributeFilter("id","salePriceTag"));
		
		NodeList nl = p.parse(priceTag);
		price = nl.elementAt(0).toPlainTextString();
//		System.out.println(nl.elementAt(0).toPlainTextString());
	}
	
	private void setDetailList() throws ParserException{
		String detailCache[] = null;
		Parser p = new Parser(pageContent);
		
		setPrice();
		
		/*各种过滤器*/
		AndFilter detailTag = new AndFilter(new TagNameFilter("div"),new HasAttributeFilter("class","mall_goods_foursort_style"));
		TagNameFilter t = new TagNameFilter("div");
		
		NodeList nl = p.parse(detailTag);
		NodeList detailNodeList = nl.elementAt(0).getChildren().extractAllNodesThatMatch(t);
		/*处理字符，以":"为分割点，存入map*/
		for(int i = 1; i < detailNodeList.size()-1; i++){
			detailCache = detailNodeList.elementAt(i).toPlainTextString().split("：");
			detailListMap.put(detailCache[0], detailCache[1]);
		}
		detailListMap.put("price", price);
	}
}
